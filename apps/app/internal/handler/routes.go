// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"

	admin "audio/apps/app/internal/handler/admin"
	api "audio/apps/app/internal/handler/api"
	web "audio/apps/app/internal/handler/web"
	"audio/apps/app/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.AuthMiddleware},
			[]rest.Route{
				{
					Method:  http.MethodGet,
					Path:    "/admin/audio/dramaInfo",
					Handler: admin.AdminDramaInfoHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/admin/audiorec/list",
					Handler: admin.AdminRecommendHandler(serverCtx),
				},
				{
					Method:  http.MethodPut,
					Path:    "/admin/audiorec/edit",
					Handler: admin.AdminRecommendEditHandler(serverCtx),
				},
				{
					Method:  http.MethodPut,
					Path:    "/admin/audiorec/add",
					Handler: admin.AdminRecommendAddHandler(serverCtx),
				},
				{
					Method:  http.MethodDelete,
					Path:    "/admin/audiorec/delete",
					Handler: admin.AdminRecommendDelHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/admin/audio/producerList",
					Handler: admin.AdminProducerListHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/admin/audio/producerEdit",
					Handler: admin.AdminProducerEditHandler(serverCtx),
				},
			}...,
		),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.AuthMiddleware},
			[]rest.Route{
				{
					Method:  http.MethodGet,
					Path:    "/web/home/getSoundSpecial",
					Handler: web.WebSoundSpecialHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/web/usercoll/drama",
					Handler: web.WebUsercollDramaHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/web/usercoll/checkDrama",
					Handler: web.WebCheckUsercollDramaHandler(serverCtx),
				},
			}...,
		),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.AuthMiddleware},
			[]rest.Route{
				{
					Method:  http.MethodGet,
					Path:    "/api/home/getSoundSpecial",
					Handler: api.ApiSoundSpecialHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/api/usercoll/drama",
					Handler: api.ApiUsercollDramaHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/api/usercoll/checkDrama",
					Handler: api.ApiCheckUsercollDramaHandler(serverCtx),
				},
			}...,
		),
	)
}
